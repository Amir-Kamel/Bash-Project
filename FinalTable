#!/usr/bin/bash
shopt -s extglob

# Table Operations Menu
while true; do
	select=$(zenity --list --title="Table Operations" --radiolist \
	--column="Select" --column="Operations" \
	TRUE "Create Table" \
	FALSE "List Tables" \
	FALSE "Drop Table" \
	FALSE "Insert into Table" \
	FALSE "Select From Table" \
	FALSE "Delete From Table" \
	FALSE "Update Table" \
	--cancel-label="Back to Main Menu" --width=700 --height=500)
	
	# Capture the exit code of Zenity
	zenity_exit_code=$?
	if [[ $zenity_exit_code == "0" ]] #if user select a database and press on 'ok' button
	then
		case $select in
		"Create Table") # create table
			chooseTBName=1  #make a flag to check if the user has choose a table name
			while true
			do 
				TBName=$(zenity --entry --text="Please enter table name:")
				if [[ $? == "1" ]] # In case user change his mind or select the wrong option
				then 
					chooseTBName=0
					break
				fi
				if [[ ! $TBName =~ ^[a-zA-Z][a-zA-Z0-9_]*[a-zA-Z0-9]$ ]]
				then
					zenity --error --text="Invalid table name. Must start with a letter, can contain underscores, and cannot end with an underscore."

				elif [[ -f $TBName || -f .$TBName-metadata ]]
				then
					zenity --error --text="Table '$TBName' already exists."
				else 
					break
				fi
			done
			
			choosencolNum=1
			while [[ $chooseTBName == "1" ]]  #will work if the user set an accepted name for the table
			do
				colNum=$(zenity --entry --text="Please enter the number of columns:")
				
				if [[ $? == "1" ]] # In case user change his mind or select the wrong option
				then 
					choosencolNum=0
					break
				fi
				
				if [[ $colNum =~ ^0$ || ! $colNum =~ ^[0]*[1-9][0-9]*$ ]]
				then
					zenity --error --text="Invalid column count. Enter only positive integers and cannot be zero alone."
				else
					break
				fi
			done

			# create metadata hidden file if user specifie colnum
			if [[ $choosencolNum == "1" ]]
			then 
				flag=0
				for ((i = 1; i <= colNum; i++)); do
					while true
					do
						colName=$(zenity --entry --text="Enter column name $i:")
						if [[ ! $colName =~ ^[a-zA-Z][a-zA-Z0-9_]*[a-zA-Z0-9]$ ]]
						then
							zenity --error --text="Invalid column name. Must start with a letter, can contain underscores, and cannot end with an underscore."
							
						else
							break
						fi
					done
					
					while true
					do
						colType=$(zenity --list --title="data type for '$colName':"\
						--radiolist --column="Select" --column="Datatypes" \
					 	TRUE "string" \
						FALSE "int" )
						if [[ $? == "1" ]]
						then 
							zenity --error --text="you have to select a datatype"
						else
							break
						fi
					done
					if [[ $flag -eq 0 ]]
					then
						pkCheck=$(zenity --question --text="Make '$colName' the primary key?" --title="Primary Key")
						if [[ $? == "0" ]]
						then
							echo "$colName:$colType:pk" >>.$TBName-metadata
							zenity --info --text="Column '$colName' becomes primary key of table '$TBName'"
							flag=1
						else
							echo "$colName:$colType" >>.$TBName-metadata
						fi
					else
						echo "$colName:$colType" >>.$TBName-metadata
					fi
				done
			fi
			if [[ $chooseTBName == "1" && $choosencolNum == "1" ]]
			then
				touch "$TBName"
				zenity --info --text="Table '$TBName' created successfully."
			fi
		;;

		"List Tables") # List Tables
			tables=$(ls -1 | grep -v "^\.")
			if [[ -z $tables ]]; then
				zenity --info --text="No tables found."
			else
				zenity --info --text="Available tables:\n$tables"
			fi
			;;

		"Drop Table") # Drop Table
			tables=$(ls -1 | grep -v "^\.")
			if [[ -z $tables ]]; then
				zenity --info --text="No tables found."
			else
				# Get files into an array (excludes hidden files)
				mapfile -t tables_array < <(find . -maxdepth 1 -type f -printf '%f\n' | grep -v "^\.")
				# Build Zenity arguments with radio buttons (mark the first item as selected)
				# Get the array length
				array_length=${#tables_array[@]}
				
				
				# Build Zenity arguments with radio buttons
				zenity_args=()
				for ((index=0; index < array_length; index++))
				do
					if [[ $index -eq 0 ]]; then
						zenity_args+=(TRUE "${tables_array[index]}")  # First item selected by default
					else
						zenity_args+=(FALSE "${tables_array[index]}")  # Others unselected
					fi
				done
				


				# Show the radio button dialog
				TBName=$(zenity --list --title="Drop table" --radiolist \
				  --text="Choose a table:" \
				  --column="Select" \
				  --column="Table Name" \
				  --cancel-label="Back to Table Operation Menu" \
				  "${zenity_args[@]}")
				  
				  
				# Capture the exit code of Zenity
				zenity_exit_code=$?
				if [[ $zenity_exit_code == "0" ]] #if user select a table and press on 'ok' button
				then
						zenity --question --title="Drop Confirmation" --text="Are you sure you want to permanently delete the table '$TBName'? This action cannot be undone."
						user_answer=$?
						if [[ $user_answer == "0" ]]
						then
							rm -f "$TBName" ".$TBName-metadata"
							zenity --notification --text="Table '$TBName' has been dropped successfully."

						fi
					
				fi
				
			fi
			

		;;

		esac
	else
		zenity --question --title="Exit Confirmation" --text="Are you sure you want to back to the main menu?"
		user_answer=$?
		if [[ $user_answer == "0" ]] # if user press yes
		then
			break
		else
			continue
		fi
	fi
done














