#!/bin/bash
			 
		while true; do
		    echo "Table Operations:"
		    echo "1) Create Table"
		    echo "2) List Tables"
		    echo "3) Drop Table"
		    echo "4) Back to Main Menu"

		    read -p "Enter your choice [1-4]: " select

		    case $select in
		    
		    1) # create table
			read -p "Please enter table name: " TBName

			if [[ ! $TBName =~ ^[a-zA-Z][a-zA-Z0-9_]*[a-zA-Z0-9]$ ]]; then
			    echo "Invalid table name. Must start with a letter, can contain underscores, and cannot end with an underscore."
			    continue
			    
			elif [[ -f $TBName || -f .$TBName-metadata ]]; then
			    echo "Table '$TBName' already exists."
			    continue
			fi

			read -p "Please enter the number of columns: " colNum

			if [[ $colNum =~ ^0$ || ! $colNum =~ ^[0]*[1-9][0-9]*$ ]]; then
			    echo "Invalid column count. Enter only positive integers and cannot be zero alone."
			    continue
			fi

			# create metadata hidden file
			flag=0
			for ((i = 1; i <= colNum; i++)); do
			    read -p "Enter column name $i: " colName

			    if [[ ! $colName =~ ^[a-zA-Z][a-zA-Z0-9_]*[a-zA-Z0-9]$ ]]; then
				echo "Invalid column name. Must start with a letter, can contain underscores, and cannot end with an underscore."
				((i--))
				continue
			    fi

			    read -p "Enter data type for '$colName' (int/str): " colType

			    if [[ $colType != "int" && $colType != "str" ]]; then
				echo "Invalid data type. Allowed types: 'int', 'str'."
				((i--))
				continue
			    fi

			    if [[ $flag -eq 0 ]]; then
				read -p "Make '$colName' the primary key? (yes/no): " pkCheck
				if [[ $pkCheck =~ ^([yY][eE][sS]|[yY])$ ]]; then
				    echo "$colName:$colType:pk" >>.$TBName-metadata
				    echo "column '$colName' become primary key of table '$TBName'"
				    flag=1
				else
				    echo "$colName:$colType" >>.$TBName-metadata
				fi
			    else
				echo "$colName:$colType" >>.$TBName-metadata
			    fi
			done

			touch "$TBName"
			echo "Table '$TBName' created successfully."
			;;
			
		    2) # List Tables
			echo "Available tables:"
			ls -1 | grep -v "^\." || echo "No tables found."
			;;
			
		    3) # Drop Table
			read -p "Please enter the name of the table to drop: " TBName

			if [[ ! -f $TBName || ! -f .$TBName-metadata ]]; then
			    echo "Table '$TBName' does not exist."
			    continue
			fi

			rm -f "$TBName" ".$TBName-metadata"
			echo "Table '$TBName' has been dropped successfully."
			;;
			
		    4) # Back to Main Menu
			echo "Returning to the main menu..."
			cd "$BASE_DIR" || exit
			break
			;;
			
		    *) # Invalid Choice
			echo "Invalid choice. Please select a valid option."
			;;
		    esac
		done
