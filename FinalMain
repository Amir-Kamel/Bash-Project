#!/bin/bash

# Save directory path
BASE_DIR="$HOME/Desktop/Full_Stack_Python/Bash_Project/Bash-Project"

# Path to the FinalTable script
FINAL_TABLE_SCRIPT="$BASE_DIR/FinalTable"  # Make sure the path is correct

# Check if the database directory exists or not
if [[ ! -e "$BASE_DIR/Databases" ]]
then
	mkdir  "$BASE_DIR/Databases"
	cd "$BASE_DIR/Databases" || exit
	zenity --notification --text="Database directory created."
else
	cd "$BASE_DIR/Databases" || exit
	zenity --notification --text="Connected to database directory. " 
fi
# Main menu
while true
do
	choice=$(zenity --list --title="Main Menu" --radiolist \
	--column="Select" --column="Option" \
	TRUE "Create Database" \
	FALSE "List Databases" \
	FALSE "Connect To Database" \
	FALSE "Drop Database"  --width=700 --height=500)

	case $choice in
	"Create Database") # Create database
		while true 
		do
			DBName=$(zenity --entry --title="Create New Database" --text="Please enter database name:")
			if [[ $? == "1" ]] # In case user change his mind or select the wrong option
			then 
				break
			elif [[ -z $DBName || ! $DBName =~ ^[a-zA-Z][a-zA-Z0-9_]*[a-zA-Z0-9]$ ]] 	
			then
				zenity --error --text="Invalid database name. Use only letters, numbers, and underscores. Must start with a letter and not end with an underscore."
			elif [[ -e $DBName ]]
			then
				zenity --error --text="Database '$DBName' already exists."
			else
				mkdir "$DBName"
				zenity --info --text="Database '$DBName' created successfully."
				break
			fi
		done
		;;
	"List Databases") # Print and list all databases
		databases=$(ls -l | grep "^d" | awk '{print $9}' )
		if [[ -z $databases ]]
		then
			zenity --info --text="No databases found."
		else
			zenity --info --text="Available Databases:\n$databases"
		fi
		
		;;
	"Connect To Database") # Connect to database
		while true
		do
			DBName=$(zenity --entry --text="Please enter database name:")
			if [[ $? == "1" ]] # In case user change his mind or select the wrong option
			then
				break
			fi
			if [[ -z $DBName ]]
			then 
				zenity --error --text="You cannt enter empty string"
			elif [[ ! -e "$DBName" || ! -d "$DBName" ]]
			then
				zenity --error --text="Database '$DBName' does not exist."
			else
				cd "$DBName" || exit
				zenity --notification --text="Connected to database '$DBName' successfully!"

				# Source the table operations script
				if [[ -f $FINAL_TABLE_SCRIPT ]]
				then
					source "$FINAL_TABLE_SCRIPT" #to execute it in the same shell 
				else
					zenity --error --text="Error: FinalTable script not found at $FINAL_TABLE_SCRIPT"
				fi

				cd "$BASE_DIR" || exit
			fi
		done
		;;
	"Drop Database")
		while true
		do 
			DBName=$(zenity --entry --title="Drop Database" --text="Enter database name to drop:")
			if [[ $? == "1" ]] # In case user change his mind or select the wrong option
			then
				break
			fi
			if [[ -z $DBName ]]
			then 
				zenity --error --text="You cannt enter empty string"
			elif [[ ! -e "$DBName" || ! -d "$DBName" ]]
			then
				zenity --error --text="Database '$DBName' does not exist."
			else
				zenity --question --title="Drop Confirmation" --text="Are you sure you want to permanently delete the database '$DBName'? This action cannot be undone."
				user_answer=$?
				if [[ $user_answer -eq 0 ]]
				then
					rm -r "$DBName"
					zenity --notification --text="Database '$DBName' dropped successfully."
					break
				fi
			fi
		done
		;;
	
	*) # In case user click on cancel or close button 
		zenity --question --title="Exit Confirmation" --text="Are you sure you want to exit the program?"
		user_answer=$?
		if [[ $user_answer == "0" ]]
		then
			zenity --notification --text="The program has been exited successfully!"
			break
		else
			zenity --notification --text="Exit operation canceled. You can continue using the program."
			continue
		fi

	esac
done

